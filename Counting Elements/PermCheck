public class PermCheck {
    public static void main(String[] args) {

        int arr[] = {99, 1, 77, 3, 8, 2, 5};
        System.out.println(solution(arr));
    }

    public static int solution(int[] a) {
        int cnt = 0;
        sort(a, 0, a.length - 1);
        for (int i = 0; i < a.length - 1; i++) {
            if (a[i + 1] != a[i] + 1) {
                return 0;
            }
        }
        return 1;
    }


    public static void merge(int arr[], int l, int m, int r) {

        int n1 = m - l + 1;
        int n2 = r - m;


        int L[] = new int[n1];
        int R[] = new int[n2];


        for (int i = 0; i < n1; ++i)
            L[i] = arr[l + i];
        for (int j = 0; j < n2; ++j)
            R[j] = arr[m + 1 + j];


        int i = 0, j = 0;


        int k = l;
        while (i < n1 && j < n2) {
            if (L[i] <= R[j]) {
                arr[k] = L[i];
                i++;
            } else {
                arr[k] = R[j];
                j++;
            }
            k++;
        }


        while (i < n1) {
            arr[k] = L[i];
            i++;
            k++;
        }


        while (j < n2) {
            arr[k] = R[j];
            j++;
            k++;
        }
    }

    public static void sort(int arr[], int l, int r)

    {
        if (l < r) {

            int m = (l + r) / 2;


            sort(arr, l, m);
            sort(arr, m + 1, r);


            merge(arr, l, m, r);
        }
    }


}
