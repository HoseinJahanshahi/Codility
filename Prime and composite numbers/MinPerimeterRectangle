import java.util.Stack;

public class MinPerimeterRectangle {
    public static void main(String[] args) {
        int n = 101;
        System.out.println(solution(n));
    }

    public static int solution(int n) {
        int fact = 0, i = 0;
        if (n == 1) {
            return 4;
        }
        Stack<Integer> s = new Stack<>();
        Stack<Integer> s2 = new Stack<>();
        s.push(1);
        int cnt = 0;
        for (i = 2; i < n; i++) {
            if (n % i == 0 && (i * s.peek() == n || s.peek() * s.peek() == n)) {
                if (s.peek() * s.peek() == n) {
                    s2.push(s.peek());
                    s2.push(s.peek());
                    break;
                }
                s2.push(i);
                s2.push(s.peek());
                break;
            }
            if (n % i == 0) {
                s.push(i);
                cnt++;
            }
        }

        if (cnt == 0)
            return 2 * (n + 1);

        return 2 * (s2.pop() + s2.pop());
    }
}
